apiVersion: v1
kind: Namespace
metadata:
  labels:
    openshift.io/cluster-monitoring: "true"
  name: openshift-storage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: enable-odf-console-plugin
  namespace: openshift-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: enable-odf-console-plugin
  namespace: openshift-storage
rules:
- apiGroups:
  - operator.openshift.io
  resources:
  - consoles
  verbs:
  - get
  - list
  - patch
  - label
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: enable-odf-console-plugin
  namespace: openshift-storage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: enable-odf-console-plugin
subjects:
- kind: ServiceAccount
  name: enable-odf-console-plugin
  namespace: openshift-storage
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  generateName: enable-odf-console-plugin-
  name: enable-odf-console-plugin
  namespace: openshift-storage
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          echo "Attempting to enable ${PLUGIN_NAME} plugin"
          echo ""

          # Create the plugins section on the object if it doesn't exist
          if [ -z $(oc get consoles.operator.openshift.io cluster -o=jsonpath='{.spec.plugins}') ]; then
            echo "Creating plugins object"
            oc patch consoles.operator.openshift.io cluster --patch '{ "spec": { "plugins": [] } }' --type=merge
          fi

          INSTALLED_PLUGINS=$(oc get consoles.operator.openshift.io cluster -o=jsonpath='{.spec.plugins}')
          echo "Current plugins:"
          echo ${INSTALLED_PLUGINS}

          if [[ "${INSTALLED_PLUGINS}" == *"${PLUGIN_NAME}"* ]]; then
              echo "${PLUGIN_NAME} is already enabled"
          else
              echo "Enabling plugin: ${PLUGIN_NAME}"
              oc patch consoles.operator.openshift.io cluster --type=json --patch '[{"op": "add", "path": "/spec/plugins/-", "value": "'${PLUGIN_NAME}'"}]'
          fi          
        env:
        - name: PLUGIN_NAME
          value: odf-console
        image: image-registry.openshift-image-registry.svc:5000/openshift/cli
        name: labeler
      restartPolicy: Never
      serviceAccount: enable-odf-console-plugin
      serviceAccountName: enable-odf-console-plugin
---
apiVersion: console.openshift.io/v1alpha1
kind: ConsolePlugin
metadata:
  name: odf-console
  namespace: openshift-storage
spec:
  displayName: ODF Plugin
  service:
    basePath: /
    name: odf-console-service
    namespace: openshift-storage
    port: 9001
---
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: openshift-storage
  namespace: openshift-storage
spec:
  targetNamespaces:
  - openshift-storage
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: odf-operator
  namespace: openshift-storage
spec:
  channel: stable-4.12
  installPlanApproval: Automatic
  name: odf-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
---
apiVersion: operator.openshift.io/v1
kind: Console
metadata:
  name: cluster
spec:
  plugins:
  - odf-console

